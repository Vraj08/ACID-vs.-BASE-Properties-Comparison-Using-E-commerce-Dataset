-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id character varying COLLATE pg_catalog."default" NOT NULL,
    customer_unique_id character varying COLLATE pg_catalog."default" NOT NULL,
    customer_zip_code_prefix integer NOT NULL,
    customer_city character varying(255) COLLATE pg_catalog."default" NOT NULL,
    customer_state character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.geolocation
(
    geolocation_id serial NOT NULL,
    geolocation_zip_code_prefix integer NOT NULL,
    geolocation_lat numeric NOT NULL,
    geolocation_lng numeric NOT NULL,
    geolocation_city character varying(255) COLLATE pg_catalog."default" NOT NULL,
    geolocation_state character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT geolocation_pkey PRIMARY KEY (geolocation_id)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    order_item_id character varying COLLATE pg_catalog."default" NOT NULL,
    order_id character varying COLLATE pg_catalog."default" NOT NULL,
    product_id character varying COLLATE pg_catalog."default",
    seller_id character varying COLLATE pg_catalog."default",
    shipping_limit_date timestamp without time zone,
    price numeric NOT NULL,
    freight_value numeric NOT NULL,
    CONSTRAINT order_items_pkey PRIMARY KEY (order_id, order_item_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id character varying COLLATE pg_catalog."default" NOT NULL,
    customer_id character varying COLLATE pg_catalog."default",
    order_status character varying(50) COLLATE pg_catalog."default",
    order_purchase_timestamp timestamp without time zone,
    order_approved_at timestamp without time zone,
    order_delivered_carrier_date timestamp without time zone,
    order_delivered_customer_date timestamp without time zone,
    order_estimated_delivery_date timestamp without time zone,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    payment_id serial NOT NULL,
    order_id character varying COLLATE pg_catalog."default",
    payment_type character varying(50) COLLATE pg_catalog."default",
    payment_installments integer,
    payment_value numeric,
    CONSTRAINT payments_pkey PRIMARY KEY (payment_id)
);

CREATE TABLE IF NOT EXISTS public.product_category_translation
(
    product_category_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    product_category_name_english character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT product_category_translation_pkey PRIMARY KEY (product_category_name)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id character varying COLLATE pg_catalog."default" NOT NULL,
    product_category_name character varying(255) COLLATE pg_catalog."default",
    product_name_length integer,
    product_description_length integer,
    product_photos_qty integer,
    product_weight_g integer,
    product_length_cm integer,
    product_height_cm integer,
    product_width_cm integer,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    review_id character varying(50) COLLATE pg_catalog."default" NOT NULL,
    order_id character varying(50) COLLATE pg_catalog."default" NOT NULL,
    review_score integer NOT NULL,
    CONSTRAINT reviews_pkey PRIMARY KEY (review_id)
);

CREATE TABLE IF NOT EXISTS public.sellers
(
    seller_id character varying COLLATE pg_catalog."default" NOT NULL,
    seller_zip_code_prefix integer NOT NULL,
    seller_city character varying(255) COLLATE pg_catalog."default" NOT NULL,
    seller_state character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sellers_pkey PRIMARY KEY (seller_id)
);

ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_seller_id_fkey FOREIGN KEY (seller_id)
    REFERENCES public.sellers (seller_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT reviews_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;